version: '3'

########################
#  SERVICES TO LAUNCH  #
########################
services:
    # ----------------------------------------
    # DELUGE
    # Deluge Torrent Client
    # ----------------------------------------
    deluge:
        image: linuxserver/deluge
        container_name: deluge
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        expose:
            - 8112
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${TORRENTS_PATH}:/data'
            - '${SYNOLOGY_BASE_DOCKER_PATH}/deluge:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8112'
            - 'traefik.frontend.rule=Host:deluge.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # OVERSEERR
    # Media library management
    # ----------------------------------------
    overseerr:
        image: sctx/overseerr:latest
        container_name: overseerr
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks: 
            - web
        expose:
            - 5055
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${SYNOLOGY_BASE_DOCKER_PATH}/overseerr:/app/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=5055'
            - 'traefik.frontend.rule=Host:overseerr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
        

    # ----------------------------------------
    # PORTAINER
    # Docker Container Management
    # ----------------------------------------
    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - web
        expose:
            - 9000
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${SYNOLOGY_BASE_DOCKER_PATH}/portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9000'
            - 'traefik.frontend.rule=Host:portainer.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # SONARR
    # TV Series Management
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - web
        expose:
            - 8989
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${SYNOLOGY_BASE_DOCKER_PATH}/sonarr:/app/config'
            - '${TORRENTS_PATH}:/data'
            - '${MEDIA_BASE_PATH}/series:/tv'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8989'
            - 'traefik.frontend.rule=Host:sonarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # RADARR
    # Movie Management
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - web
        expose:
            - 7878
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${SYNOLOGY_BASE_DOCKER_PATH}/radarr:/config'
            - '${TORRENTS_PATH}:/data'
            - '${MEDIA_BASE_PATH}/movies:/movies'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=7878'
            - 'traefik.frontend.rule=Host:radarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # WATCHTOWER
    # Automatic Update Service for Docker VMs
    # ----------------------------------------
    watchtower:
        image: v2tec/watchtower
        container_name: watchtower
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - internal
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
            - WATCHTOWER_NOTIFICATIONS=email
            - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
            - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
            - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/ssl/certs:/etc/ssl/certs'
        command: --schedule @midnight --cleanup
        labels:
            - 'traefik.enable=false'

    # ----------------------------------------
    # TRAEFIK
    # Reverse Proxy + SSL Support
    # ----------------------------------------
    traefik:
        image: traefik:v1.7.16
        container_name: traefik
        restart: unless-stopped
        logging:
            driver: 'json-file'
            options:
                max-file: '${LOG_FILE_NUM}'
                max-size: '${LOG_FILE_SIZE}'
        networks:
            - web
        ports:
            - '80:80'
            - '443:443'
            - '8080:8080'
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '${SYNOLOGY_BASE_DOCKER_PATH}/traefik:/etc/traefik/acme'
            - '${SYNOLOGY_BASE_DOCKER_PATH}/traefik/traefik.toml:/traefik.toml'
        command:
            - --docker
            - --api
            - --loglevel=debug
            - "--entryPoints=Name:https Address::443 TLS"
            - "--entryPoints=Name:http Address::80 Redirect.EntryPoint:https"
            - --acme.entrypoint=https
            - --acme=true
            - --acme.domains=${DOMAIN}
            - --acme.email=${EMAIL}
            - --acme.ondemand=true
            - --acme.onhostrule
            - --acme.httpchallenge
            - --acme.httpchallenge.entrypoint=http
            - --acme.storage=etc/traefik/acme/acme.json
            - --docker.watch
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8080'
            - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.auth.basic=${TRAEFIK_AUTH}'

########################
# GLOBAL CONFIGURATION #
########################
networks:
    internal:
    web:
